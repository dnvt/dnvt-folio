{"version":3,"sources":["components/cards/layouts/DragCardThree.tsx","routes/homepage/segments/PrivateWork.tsx"],"names":["ThreeDevices","props","window","useWindowSize","status","src","alt","path","title","tag","href","key","background","cardWidth","width","uncontained","noHover","value","DragCardsThree","cardGroup","content","map","drag","PrivateWork","CONTENT","useMemo","HOMEPAGE_CONTENT","PRIVATE_WORK","type","spacer","height"],"mappings":"+GAAA,uCAoCMA,EAAwC,SAACC,GAC7C,IAAMC,EAASC,cACPC,EAA8DH,EAA9DG,OAAQC,EAAsDJ,EAAtDI,IAAKC,EAAiDL,EAAjDK,IAAKC,EAA4CN,EAA5CM,KAAMC,EAAsCP,EAAtCO,MAAOC,EAA+BR,EAA/BQ,IAAKC,EAA0BT,EAA1BS,KAAMC,EAAoBV,EAApBU,IAAKC,EAAeX,EAAfW,WAEnDC,EAAY,IAIhB,OAHIX,EAAOY,MAAQ,MAAKD,EAAY,KAChCX,EAAOY,MAAQ,OAAMD,EAAY,KAGnC,cAAC,IAAD,CACEE,aAAW,EACXC,SAAO,EAEPZ,OAAQA,EACRC,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACNG,KAAMA,EACND,IAAKA,EACLD,MAAOA,EACPI,WAAYA,EACZE,MAAOD,EAZT,SAcGL,EAAMS,OAXFN,IAgBIO,IAnCmC,SAAC,GAAiB,IAC9DC,EAD6D,EAAdC,QAC3BC,IAAIrB,GAE5B,OAAO,cAAC,IAAD,CAAWsB,KAAK,QAAhB,SAAyBH,M,gCChClC,sEA+BeI,UAvBe,WAC5B,IAAMC,EAAUC,mBAAQ,kBAAMC,IAAiBC,eAAc,IAE7D,OACE,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,KAAK,KAAX,4BACA,cAAC,IAAD,CAAQC,OAAO,QAAf,SACE,eAAC,IAAD,CAAMD,KAAK,OAAX,0NAKE,uBALF,uDAQF,cAAC,IAAD,CAAQE,OAAQ,QAElB,cAAC,IAAD,CAAgBV,QAASI","file":"static/js/8.7e9bc1ad.chunk.js","sourcesContent":["import React from \"react\"\nimport { useWindowSize } from \"../../../hooks/useWindowSize\"\nimport Container from \"../../containers/Container\"\nimport Card, { ProjectColor, STuples } from \"../Card\"\nimport { CardStatusType } from \"../segments/CardStatus\"\n\ninterface CardPropsType {\n  key: number\n  alt: string\n  src: STuples\n  srcDark?: STuples\n  srcMobile?: STuples\n  path?: string\n  href?: string\n  status?: CardStatusType\n  tag: {\n    value: string\n    color?: ProjectColor\n  }\n  title: {\n    value: string\n    color?: ProjectColor\n  }\n  background?: ProjectColor\n}\n\nexport type ThreeCardsContentType = [CardPropsType, CardPropsType, CardPropsType]\ninterface ThreeCardsProps { content: ThreeCardsContentType }\n\nconst DragCardsThree: React.FC<ThreeCardsProps> = ({ content }) => {\n  let cardGroup = content.map(ThreeDevices)\n\n  return <Container drag=\"three\">{cardGroup}</Container>\n\n}\n\nconst ThreeDevices: React.FC<CardPropsType> = (props) => {\n  const window = useWindowSize()\n  const { status, src, alt, path, title, tag, href, key, background } = props\n\n  let cardWidth = 288\n  if (window.width > 992) cardWidth = 448\n  if (window.width > 1360) cardWidth = 544\n\n  return (\n    <Card\n      uncontained\n      noHover\n      key={key}\n      status={status}\n      src={src}\n      alt={alt}\n      path={path}\n      href={href}\n      tag={tag}\n      title={title}\n      background={background}\n      width={cardWidth}\n    >\n      {title.value}\n    </Card>\n  )\n}\n\nexport default DragCardsThree\n","import React, { useMemo } from \"react\"\nimport Container from \"../../../components/containers/Container\"\nimport Font from \"../../../utils/fonts/Font\"\nimport Column from \"../../../components/containers/Column\"\nimport Spacer from \"../../../utils/spacer/Spacer\"\nimport DragCardsThree from \"../../../components/cards/layouts/DragCardThree\"\nimport HOMEPAGE_CONTENT from \"../Homepage.content\"\n\nconst PrivateWork: React.FC = () => {\n  const CONTENT = useMemo(() => HOMEPAGE_CONTENT.PRIVATE_WORK, [])\n\n  return (\n    <>\n      <Container>\n        <Font type='h4'>Protected work</Font>\n        <Column spacer=\"third\">\n          <Font type='text'>\n            As a freelancer in Berlin, I worked on several NDA projects as an\n            interaction and motion designer. I defined and unified the behavior\n            for interfaces on mediums like airplane seats, cookwear and TV\n            screens.\n            <br /> Contact me to learn more about these projects.\n          </Font>\n        </Column>\n        <Spacer height={40} />\n      </Container>\n      <DragCardsThree content={CONTENT} />\n    </>\n  )\n}\n\nexport default PrivateWork\n"],"sourceRoot":""}