{"version":3,"sources":["routes/guildelines/Guidelines.content.ts","routes/guildelines/segments/CardSection.tsx","utils/spacer/variations/SpacerFortyHalf.tsx","components/cards/layouts/DragCardThree.tsx"],"names":["CONTENT_APP","FOOTER_CARDS","key","reverse","src","alt","title","value","path","THREE_CARDS","tag","GROUPED_CARDS","background","GROUPED_DEVICES","browser","mobile","MOBILE_FOUR","FRAMELESS_FIVE","FRAMELESS_FIVE_EMPTY","CardSection","content","useMemo","contained","height","right","left","SpacerFortyHalf","window","useWindowSize","width","ThreeDevices","props","status","href","cardWidth","uncontained","noHover","DragCardsThree","cardGroup","map","drag"],"mappings":"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","file":"static/js/4.b2760227.chunk.js","sourcesContent":["import { FooterContentType } from \"../../components/cards/layouts/FooterCards\"\nimport { ThreeCardsContentType } from \"../../components/cards/layouts/DragCardThree\"\nimport { GroupedContentType } from \"../../components/cards/layouts/GroupedCards\"\nimport { FourImagesType } from \"../../components/devices/layouts/DragMobileFour\"\nimport { FiveImagesType } from \"../../components/devices/layouts/DragFramelessFive\"\nimport { DevicesMixed } from \"../../components/devices/layouts/GroupedMobileBrowser\"\n\n// const norseImages: STuples = [norsePng, norseWebp]\n\nconst FOOTER_CARDS: FooterContentType = [\n\t{\n\t\tkey: 1,\n\t\treverse: true,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 1\",\n\t\ttitle: { value: \"Reverse Title\" },\n\t\tpath: \"\",\n\t},\n\t{\n\t\tkey: 2,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 2\",\n\t\ttitle: { value: \"Random Title\" },\n\t\tpath: \"\",\n\t},\n\t{\n\t\tkey: 3,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 3\",\n\t\ttitle: { value: \"Next Title\" },\n\t\tpath: \"\",\n\t},\n]\n\nconst THREE_CARDS: ThreeCardsContentType = [\n\t{\n\t\tkey: 1,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 1\",\n\t\ttag: { value: \"Test 1\" },\n\t\ttitle: { value: \"Value title 1\" },\n\t\tpath: \"\",\n\t},\n\t{\n\t\tkey: 2,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 2\",\n\t\ttag: { value: \"Test 1\" },\n\t\ttitle: { value: \"Value title 2\" },\n\t\tpath: \"\",\n\t},\n\t{\n\t\tkey: 3,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 3\",\n\t\ttag: { value: \"Test 1\" },\n\t\ttitle: { value: \"Value title 3\" },\n\t\tpath: \"\",\n\t},\n]\n\nconst GROUPED_CARDS: GroupedContentType = [\n\t{\n\t\tkey: 1,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 1\",\n\t\ttag: { value: \"Value tag 1\" },\n\t\ttitle: { value: \"Value title 1\" },\n\t\tbackground: \"transparent\",\n\t},\n\t{\n\t\tkey: 2,\n\t\tsrc: [\"\", \"\"],\n\t\talt: \"test 2\",\n\t\ttag: { value: \"Value tag 2\" },\n\t\ttitle: { value: \"Value title 2\" },\n\t\tpath: \"\",\n\t},\n]\n\nconst MOBILE_FOUR: FourImagesType = [\n\t{ src: [\"\", \"\"], alt: \"Test 1\", key: 1 },\n\t{ src: [\"\", \"\"], alt: \"Test 2\", key: 2 },\n\t{ src: [\"\", \"\"], alt: \"Test 3\", key: 3 },\n\t{ src: [\"\", \"\"], alt: \"Test 4\", key: 4 },\n]\n\nconst FRAMELESS_FIVE: FiveImagesType = [\n\t{ src: [\"\", \"\"], alt: \"Test 1\", key: 1 },\n\t{ src: [\"\", \"\"], alt: \"Test 2\", key: 2 },\n\t{ src: [\"\", \"\"], alt: \"Test 3\", key: 3 },\n\t{ src: [\"\", \"\"], alt: \"Test 4\", key: 4 },\n\t{ src: [\"\", \"\"], alt: \"Test 4\", key: 5 },\n]\n\nconst FRAMELESS_FIVE_EMPTY: FiveImagesType = [\n\t{ src: [\"\", \"\"], alt: \"Test 1\", key: 1 },\n\t{ src: [\"\", \"\"], alt: \"Test 2\", key: 2 },\n\t{ src: [\"\", \"\"], alt: \"Test 3\", key: 3 },\n\t{ src: [\"\", \"\"], alt: \"Test 4\", key: 4 },\n\t{ src: [\"\", \"\"], alt: \"Test 4\", key: 5 },\n]\n\nconst GROUPED_DEVICES: DevicesMixed = {\n\tbrowser: [\n\t\t{ src: [\"\", \"\"], alt: \"Test 1\", key: 1 },\n\t\t{ src: [\"\", \"\"], alt: \"Test 2\", key: 2 },\n\t],\n\tmobile: [\n\t\t{ src: [\"\", \"\"], alt: \"Test 1\", key: 3 },\n\t\t{ src: [\"\", \"\"], alt: \"Test 2\", key: 4 },\n\t],\n}\n\nconst CONTENT_APP = {\n\tFOOTER_CARDS,\n\tTHREE_CARDS,\n\tGROUPED_CARDS,\n\tGROUPED_DEVICES,\n\tMOBILE_FOUR,\n\tFRAMELESS_FIVE,\n\tFRAMELESS_FIVE_EMPTY,\n}\n\nexport default CONTENT_APP\n","import React, { useMemo } from \"react\"\nimport Card from \"../../../components/cards/Card\"\nimport DragCardsThree from \"../../../components/cards/layouts/DragCardThree\"\nimport FooterCards from \"../../../components/cards/layouts/FooterCards\"\nimport GroupedCard from \"../../../components/cards/layouts/GroupedCards\"\nimport Spacer from \"../../../utils/spacer/Spacer\"\nimport SpacerFortyHalf from \"../../../utils/spacer/variations/SpacerFortyHalf\"\nimport CONTENT_APP from \"../Guidelines.content\"\n\nconst CardSection: React.FC = () => {\n  const content = useMemo(() => CONTENT_APP, [])\n\n\n  return (\n    <>\n      <SpacerFortyHalf />\n      <Card\n        tag={{ value: 'Programming' }}\n        src={[\"\", \"\"]}\n        alt=\"\"\n        path='/'\n      >\n        Test of this title\n      </Card>\n      <Spacer contained height={32} />\n      <Card\n        right\n        tag={{ value: 'Programming' }}\n        src={[\"\", \"\"]}\n        alt=\"\"\n        path='/'\n      >\n        Test of this title\n      </Card>\n      <Spacer contained height={80} />\n      <DragCardsThree\n        content={content.THREE_CARDS}\n      />\n      <Spacer contained height={80} />\n      <GroupedCard\n        content={content.GROUPED_CARDS}\n      />\n      <SpacerFortyHalf />\n      <GroupedCard\n        left\n        content={content.GROUPED_CARDS}\n      />\n      <Spacer contained height={80} />\n      <FooterCards content={content.FOOTER_CARDS} />\n    </>\n  )\n}\n\nexport default CardSection\n","import React from \"react\"\nimport Container from \"../../../components/containers/Container\"\nimport { useWindowSize } from \"../../../hooks/useWindowSize\"\nimport Spacer, { HeightType } from \"../Spacer\"\n\n\nconst SpacerFortyHalf: React.FC = () => {\n  const window = useWindowSize()\n\n  let height: HeightType = 24\n  if (window.width > 991) height = 40\n  if (window.width > 767) height = 32\n\n  return (\n    <Container>\n      <Spacer height={height} />\n    </Container>\n  )\n}\n\nexport default SpacerFortyHalf\n","import React from \"react\"\nimport { useWindowSize } from \"../../../hooks/useWindowSize\"\nimport Container from \"../../containers/Container\"\nimport Card, { ProjectColor, STuples } from \"../Card\"\nimport { CardStatusType } from \"../segments/CardStatus\"\n\ninterface CardPropsType {\n  key: number\n  alt: string\n  src: STuples\n  srcDark?: STuples\n  srcMobile?: STuples\n  path?: string\n  href?: string\n  status?: CardStatusType\n  tag: {\n    value: string\n    color?: ProjectColor\n  }\n  title: {\n    value: string\n    color?: ProjectColor\n  }\n  background?: ProjectColor\n}\n\nexport type ThreeCardsContentType = [CardPropsType, CardPropsType, CardPropsType]\ninterface ThreeCardsProps { content: ThreeCardsContentType }\n\nconst DragCardsThree: React.FC<ThreeCardsProps> = ({ content }) => {\n  let cardGroup = content.map(ThreeDevices)\n\n  return <Container drag=\"three\">{cardGroup}</Container>\n\n}\n\nconst ThreeDevices: React.FC<CardPropsType> = (props) => {\n  const window = useWindowSize()\n  const { status, src, alt, path, title, tag, href, key, background } = props\n\n  let cardWidth = 288\n  if (window.width > 992) cardWidth = 448\n  if (window.width > 1360) cardWidth = 544\n\n  return (\n    <Card\n      uncontained\n      noHover\n      key={key}\n      status={status}\n      src={src}\n      alt={alt}\n      path={path}\n      href={href}\n      tag={tag}\n      title={title}\n      background={background}\n      width={cardWidth}\n    >\n      {title.value}\n    </Card>\n  )\n}\n\nexport default DragCardsThree\n"],"sourceRoot":""}